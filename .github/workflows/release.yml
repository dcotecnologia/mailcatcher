name: Release
on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set environment variables
      id: vars
      run: |
        echo "project_version=$(cat .version)" >> $GITHUB_OUTPUT
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push (Hub)
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: "dcotecnologia/mailcatcher:latest, dcotecnologia/mailcatcher:${{ steps.vars.outputs.project_version }}"
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          "ENVIRONMENT=production"
    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.TOKEN_PAT }}
    - name: Build and push (GHCR)
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: "dcotecnologia/mailcatcher:latest, dcotecnologia/mailcatcher:${{ steps.vars.outputs.project_version }}"
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          "ENVIRONMENT=production"
    - name: Get Changelog Entry
      id: changelog_reader
      uses: mindsers/changelog-reader-action@v2
      with:
        validation_depth: 10
        version: ${{ steps.vars.outputs.project_version }}
        path: ./CHANGELOG.md
    - name: Create a GitHub release
      uses: ncipollo/release-action@v1
      with:
        tag: v${{ steps.vars.outputs.project_version }}
        name: v${{ steps.vars.outputs.project_version }}
        body: ${{ steps.changelog_reader.outputs.changes }}
        prerelease: ${{ steps.changelog_reader.outputs.status == 'prereleased' }}
        draft: ${{ steps.changelog_reader.outputs.status == 'unreleased' }}
        allowUpdates: true
        token: ${{ secrets.TOKEN_PAT }}